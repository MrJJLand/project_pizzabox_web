@model PizzaBox.Client.Models.OrderViewModel

@* The @model functions as a hard-code, making sure only that can view *@

<h2>Make a Custom Pizza</h2>

<form action="/order" method="post">
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>Choose a Size for Your Pizza</legend>
        @Html.ValidationMessageFor(m => m.SelectedSize)
        @foreach (var item in Model.Sizes)
        {
            <input type="radio" id="@item" name="selectedsize" value="@item">
            <label for="@item">@item</label>
        }
    </fieldset>

    <fieldset>
        <legend>Choose a Crust</legend>
        @Html.ValidationMessageFor(m => m.SelectedCrust)
        @foreach (var item in Model.Crusts)
        {
            <input type="radio" id="@item" name="selectedcrust" value="@item">
            <label for="@item">@item</label>
        }
    </fieldset>

    <fieldset>
        <legend>Choose a Sauce</legend>
        @Html.ValidationMessageFor(m => m.SelectedSauce)
        @foreach (var item in Model.Sauces)
        {
            <input type="radio" id="@item" name="selectedsauce" value="@item">
            <label for="@item">@item</label>
        }
    </fieldset>

    <fieldset>
        <legend>Choose a Cheese</legend>
        @Html.ValidationMessageFor(m => m.SelectedCheese)
        @foreach (var item in Model.Cheeses)
        {
            <input type="radio" id="@item" name="selectedcheese" value="@item">
            <label for="@item">@item</label>
        }
    </fieldset>

    <fieldset>
        <legend>Toppings</legend>
        @Html.ValidationMessageFor(m => m.SelectedToppings)
        @foreach (var item in Model.Toppings)
        {
            <input type="checkbox" id="@item" name="selectedtoppings" value="@item">
            <label for="@item">@item</label>
        }
    </fieldset>

    <label>Submit My Pizza Order</label>
    <button type="submit">Submit</button>

</form>

<a href="/home/index">Return to Main Page</a>