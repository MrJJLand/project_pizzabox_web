jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput='test_coverage/' -l trx -o 'test_result'

  analyze:
    needs:
      - build
      - test
    env:
      SONAR_TOKEN: ${{ secrets.SONAR.TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install -g dotnet-sonarscanner
      - run: dotnet sonarscanner begin -k:'pizzabox' -o:'MrJJLand' -d:sonar.login:$SONAR_TOKEN -d:sonar.host.url:'https://sonarcloud.io' -d.
      - run: dotnet build
      - run: dotnet sonarscanner end -d:sonar.login=$SONAR_TOKEN

  package:
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN}}
      $DOCKER_USER: ${{ secrets.DOCKER_USER}}
    needs:
      - analyze
    runs-on: ubuntu-20.04
    steps: 
      - uses: actions/checout@v2
      - run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker image build -f Dockerfile -t pizzabox .
      - run: docker image tag pizzabox mrjjland/pizzabox
      - run: docker push mrjjland/pizzabox
      - run: docker logout

  login:
    needs:
      - package
    runs-on: ubuntu-20.04
    steps:
      - uses: azure/login@v1
        with:
            cred: ${{ secrets.AZURE_CREDENTIALS}}

  deploy:
    needs:
      - login
    runs-on: ubuntu-20.04
    steps:
      - uses: azure/webapps-deploy@v2
        app-name: pizzabox2021
        images: jacobpolivka/pizzabox

name: ci-pipeline

on: push